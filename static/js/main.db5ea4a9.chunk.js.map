{"version":3,"sources":["component/context.js","component/Contact/Contact.js","component/Contact/Contacts.js","component/layout/Navbar.js","component/layout/TextInputGroup.js","component/Contact/AddContact.js","component/Contact/EditContact.js","App.js","index.js"],"names":["i","Context","React","createContext","Reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","onDelete","delete","name","email","phone","className","onClick","bind","to","Contacts","deleteContact","newContact","Fragment","key","deleteClickHandler","Header","href","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","prototype","PropTypes","string","isRequired","func","defaultProps","AddContact","e","target","onSubmit","preventDefault","alert","post","history","push","EditContact","updContact","match","params","put","App","Navbar","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db5ea4a9.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\n//importing the all the imp files and the libraries.\nconst Context = React.createContext();\n//crete a context to manage the states globally .\nconst Reducer = (state,action)=>{//create the reducer to fire the action and update the output.\n    switch(action.type){\n        case 'DELETE_CONTACT':\n            return{\n                ...state,\n                contacts: state.contacts.filter(contact => \n                    contact.id !== action.payload)\n            }\n\n        case 'ADD_CONTACT':\n            return{\n                ...state,\n                contacts: [action.payload,\n                ...state.contacts]\n            }\n\n        case 'UPDATE_CONTACT':\n            return{\n                ...state,\n                contacts: state.contacts.map(contact => \n                    contact.id === action.payload.id? (contact =\n                        action.payload) : contact)\n            }    \n\n        default: \n            return state;    \n    }\n}\n//creating the class components.\nexport class Provider extends Component{\n    state = {\n        contacts : [],\n        dispatch: action =>{\n            this.setState(state => Reducer(state,action) )\n        }\n    }\n//fetch all teh data on rendering the page.\n    async componentDidMount(){\n        const res = await axios.get('http://jsonplaceholder.typicode.com/users')\n\n        this.setState({contacts: res.data});\n    }\n//provider provides the states available to all the childred\n\n    render(){\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;","//inport the neccessary libraries and the components.\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { Consumer } from '../context'\nimport axios from 'axios'\n\n//creating a new class based components of contacts which is basicall contains all the contacts.\nclass Contact extends Component { \n        //on delete this is called to delete the contact and the delete_contacts action will be called  \n\n    onDelete = async (id,dispatch) =>{\n        await axios.delete(`http://jsonplaceholder.typicode.com/users/${id}`)\n            dispatch({type:'DELETE_CONTACT',payload: id});\n    }; \n    render() {//return the single compoenets of the contact\n        const { id,name,email,phone } = this.props.contact; \n        return(\n            <Consumer>\n                {value =>{\n                    const { dispatch } = value;\n                    return(\n                        <div className=\"card card-body mb-3 list-contact\">\n                            <h4>\n                            {name} \n                            <i className=\"fa fa-envelope email-icon\"></i>\n                            <span className=\"emailname\">{ email}</span>\n                            <i className=\"fa fa-phone phone-icon\"></i>\n                            <span className=\"phone-number\">{phone}</span>\n                            <i  className=\"fa fa-times delete-btn\" onClick={this.onDelete.bind(this,id,dispatch)}/>\n                            <Link to={`Contacts/edit/${id}`}>\n                                <i className=\"fa fa-pencil contact-pencil\" ></i>\n                            </Link>\n                            </h4> \n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nContact.propTypes ={\n    contact: PropTypes.object.isRequired,\n    deleteClickHandler: PropTypes.func.isRequired\n}\n\nexport default Contact;","import React, { Component } from 'react'\nimport Contact from './Contact'//importing all the necessary files and folders\nimport { Consumer } from '../context'\n//creating a new class based components of contacts which is basicall contains all the contacts.\nclass Contacts extends Component { \n    deleteContact = (id) =>{\n        const { contacts } = this.state;\n        const newContact = contacts.filter(contact =>//handles the delete function to delete the contacts\n            contact.id !== id\n        );\n        this.setState({\n            contacts: newContact\n        })\n    };  //retrun the contacts\n    render() {\n            return(\n                <Consumer>\n                    {value =>{\n                        const { contacts } = value;\n                        return(\n                            <React.Fragment>\n                                <h1 className=\"display-4 mb-2\">\n                                    <span className=\"textHeading\"><center>Contacts </center></span>\n                                </h1>\n                                {contacts.map(contact => \n                                <Contact \n                                    key={contact.id}\n                                    contact={contact} \n                                    deleteClickHandler={this.deleteContact.bind(this,contact.id)}\n                                />\n                                )}\n                            </React.Fragment>\n                        )\n                    }}    \n                </Consumer>\n            )\n        }\n}\nexport default Contacts;","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n//import the necessary libraries and components to the compoenets.\nconst Header = () =>{ \n    return(//it returns the header or the navbar to the app components.\n        <nav className=\"navbar navbar-expand-sm \n        navbar-dark bgColorNav mb-3 py-0\">\n            <div className=\"container\">\n                <a href=\"/Contacts\" className=\"navbar-brand\"> \n                    <i className=\"fa fa-home\"/>Home\n                </a>\n                </div>\n                <ul className=\"navbar-nav mr-auto\"> \n                    <li className=\"nav-item navbar-brand\">\n                        <Link to=\"/Contacts/add\" className=\"nav-link addContact\">\n                            <i className=\"fa fa-plus\">Add</i>\n                        </Link>\n                    </li> \n                </ul>\n            </nav>\n    );\n} \nexport default Header;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n//inport the neccessary libraries and the components.\n\nconst TextInputGroup=({\n    label,\n    name,\n    placeholder,//input group components and its attributes\n    type,\n    value,\n    onChange,\n    error\n}) => {\n    return (// returns the form which provides the input form to the components.\n    <div className=\"form-group\">\n        <label htmlFor={name}>{label}</label>\n        <input type={type}\n        name={name}\n        className={classnames('form-control form-control-lg',{\n            'is-invalid':error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        />\n        {error && <div className=\"invalid-feedback\">\n            {error}\n        </div>}\n        \n    </div>\n    \n    );\n    \n};\n//attribute is defined that all the fields are necessary to be field.\n\nTextInputGroup.prototype={\n    label:PropTypes.string.isRequired,\n    name:PropTypes.string.isRequired,\n    placeholder:PropTypes.string.isRequired,\n    type:PropTypes.string.isRequired,\n    onChange:PropTypes.func.isRequired,\n    error:PropTypes.string.isRequired\n}\n\nTextInputGroup.defaultProps={\n    type:'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react'\nimport { Consumer } from '../context'\nimport axios from 'axios'\nimport TextInputGroup from '../layout/TextInputGroup'\n\nclass AddContact extends Component {\n    state={//a state object to provide the initial state of the components.\n        name: '',\n        email: '',\n        phone: '' \n    }\n\n    onChange = e =>{\n        this.setState({ [e.target.name]:e.target.value });\n    }\n\n    onSubmit = async (dispatch,e) =>{\n        e.preventDefault();\n        const { name,email,phone } = this.state;\n        // check for the empty from wether the form is filled or not. \n        // Check for Errors\n\n        if((name||email||phone)=== ''){ \n            alert(\"Please fill all the fields!!\");\n            return;\n        } \n// create a new objct with the following prperties\n        const newContact={\n            name,\n            email,\n            phone,\n        };\n\n        const res = await axios.post('http://jsonplaceholder.typicode.com/users',newContact)\n            dispatch({type:'ADD_CONTACT',payload:res.data});\n\n        //Clear all the states and set to null\n        this.setState({\n            name: '',\n            email: '',\n            phone: '' \n        });\n\n        this.props.history.push('/Contacts');\n\n    }\n\n    render() {\n        const {name,email,phone } = this.state;\n        return (\n            <Consumer>\n                {value =>{\n                    const { dispatch } = value;\n                     //add contacts components to add the new contacts to the list.\n\n                    return(\n                        <div className=\"card card-style\">\n                                <div className=\"card-header\">\n                                    Add Contact\n                                </div>\n                                    <div className=\"card-body\">\n                                        <form onSubmit={this.onSubmit.bind(this,dispatch)}>\n                                            <TextInputGroup\n                                                label=\"Name\"\n                                                name=\"name\"\n                                                placeholder=\"Enter Name\"\n                                                type=\"text\"\n                                                value={name}\n                                                onChange={this.onChange} \n                                            />\n\n                                            <TextInputGroup\n                                                label=\"Email\"\n                                                name=\"email\"\n                                                placeholder=\"Enter Email\"\n                                                type=\"email\"\n                                                value={email}\n                                                onChange={this.onChange} \n                                            />\n\n                                            <TextInputGroup\n                                                label=\"Phone\"\n                                                name=\"phone\"\n                                                placeholder=\"Enter Phone Number\"\n                                                type=\"text\"\n                                                value={phone}\n                                                onChange={this.onChange} \n                                            />\n                                            <input className=\"btn btn-light btn-block\" type=\"submit\" value=\"Add contact\"/>\n                                        </form>\n                                    </div>\n                </div>\n                    )\n                        }}\n            </Consumer>\n            \n        )\n    }\n}\n\nexport default AddContact;","//we create edit compoents\nimport React, { Component } from 'react'\nimport { Consumer } from '../context'\nimport axios from 'axios'\nimport TextInputGroup from '../layout/TextInputGroup'\n\nclass EditContact extends Component {\n    state={\n        name: '',\n        email: '',//set to default values.\n        phone: '' \n    }\n//it fetch the data from api on render the page \n    async componentDidMount(){\n        const { id } = this.props.match.params;\n        const res = await axios.get(`http://jsonplaceholder.typicode.com/users/${id}`);\n        const contact = res.data;\n        \n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        })\n    } \n    onChange = e =>{\n        this.setState({ [e.target.name]:e.target.value });\n    } \n    //it handles the submit fucntion \n    onSubmit = async (dispatch,e) =>{\n        e.preventDefault();\n        const { name,email,phone } = this.state; \n        if((name || email || phone)=== ''){ \n            alert(\"Please fill all the fields!!\");\n            return;\n        }  \n        const updContact = {\n            name,\n            email,\n            phone\n        } \n        const { id } = this.props.match.params; \n        const res = await axios.put(`http://jsonplaceholder.typicode.com/users/${id}`,updContact);\n\n        dispatch({type:'UPDATE_CONTACT',payload:res.data}); \n        //Clear State\n        this.setState({\n            name: '',\n            email: '',\n            phone: '' \n        }); \n        this.props.history.push('/Contacts'); \n    } \n    render() {\n        const {name,email,phone } = this.state;\n        return (\n            <Consumer>\n                {value =>{\n                    const { dispatch } = value;\n                    return(\n                        <div className=\"card mb-3 card-style\">\n                <div className=\"card-header\">\n                    Edit Contact\n                </div>\n                    <div className=\"card-body\">\n                        <form onSubmit={this.onSubmit.bind(this,dispatch)}>\n                            <TextInputGroup\n                                label=\"Name\"\n                                name=\"name\"\n                                placeholder=\"Enter Name\"\n                                type=\"text\"\n                                value={name}\n                                onChange={this.onChange} \n                            />\n\n                            <TextInputGroup\n                                label=\"Email\"\n                                name=\"email\"\n                                placeholder=\"Enter Email\"\n                                type=\"email\"\n                                value={email}\n                                onChange={this.onChange} \n                            />\n\n                            <TextInputGroup\n                                label=\"Phone\"\n                                name=\"phone\"\n                                placeholder=\"Enter Phone Number\"\n                                type=\"text\"\n                                value={phone}\n                                onChange={this.onChange} \n                            />\n                            <input className=\"btn btn-light btn-block\" type=\"submit\" value=\"Update contact\"/>\n                        </form>\n                    </div>\n                </div>\n                    )\n                        }}\n            </Consumer>\n            \n        )\n    }\n}\n\nexport default EditContact;","import React from 'react'; \nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './component/Contact/Contacts';\nimport Navbar from './component/layout/Navbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport AddContact from './component/Contact/AddContact';\nimport { Provider } from './component/context'; \nimport EditContact from './component/Contact/EditContact';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n    <div className=\"App\">\n      <Navbar/>\n      <div className=\"container\">\n        <Switch>\n        <Route exact path=\"/Contacts\" component={Contacts}/>\n          <Route exact path=\"/Contacts/add\" component={AddContact}/>\n          <Route exact path=\"/Contacts/edit/:id\" component={EditContact}/> \n        </Switch>\n        </div>\n      \n    </div>\n    </Router>\n    </Provider>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n \n"],"sourceRoot":""}